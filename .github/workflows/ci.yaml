name: CI

on:
  pull_request:
    types:
      - opened
      - synchronize
      - reopened
  workflow_dispatch:

concurrency:
  group: ci-${{ github.ref_name }}
  cancel-in-progress: true

env:
  CI: true
  IS_PULL_REQUEST_TO_MAIN:
    ${{ github.event_name == 'pull_request' && github.event.pull_request.base.ref == 'main' && 'true' || 'false' }}
  TURBO_LOG_ORDER: stream
  TURBO_TOKEN:
    ${{ !(github.event_name == 'pull_request' && github.event.pull_request.base.ref == 'main') &&
    secrets.TURBO_REMOTE_CACHE_TOKEN || '' }}
  TURBO_TEAM:
    ${{ !(github.event_name == 'pull_request' && github.event.pull_request.base.ref == 'main') &&
    secrets.TURBO_REMOTE_CACHE_TEAM || '' }}
  INSTALL_OPTIONS:
    ${{ github.event_name == 'pull_request' && github.event.pull_request.base.ref != 'main' && '"...[HEAD^1]"' || '' }}
  BUILD_OPTIONS:
    ${{ github.event_name == 'pull_request' && github.event.pull_request.base.ref != 'main' && '"{./apps/*}[HEAD^1]^..."
    "{./packages/*}[HEAD^1]..."' || './packages/*' }}

jobs:
  ci-general:
    name: CI General
    runs-on: ubuntu-latest
    timeout-minutes: 10

    env:
      NODE_VERSION: 20

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Setup Zimic
        id: zimic-setup
        uses: ./.github/actions/zimic-setup
        with:
          node-version: ${{ env.NODE_VERSION }}
          turbo-token: ${{ env.TURBO_TOKEN }}
          turbo-team: ${{ env.TURBO_TEAM }}
          install: ${{ env.INSTALL_OPTIONS }}
          build: ${{ env.BUILD_OPTIONS }}
          build-node-env: ${{ env.IS_PULL_REQUEST_TO_MAIN == 'false' && 'development' || 'production' }}
          install-playwright-browsers: true

      - name: Check formatting style
        uses: ./.github/actions/zimic-style-check
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Lint code and check types
        run: |
          pnpm turbo \
            types:check lint:turbo \
            --continue \
            --concurrency 100% \
            ${{ steps.zimic-setup.outputs.install-filters }}

  ci-node:
    name: CI Node.js
    runs-on: ubuntu-latest
    timeout-minutes: 10

    strategy:
      fail-fast: false
      matrix:
        node-version:
          - 18
          - 20

    env:
      NODE_VERSION: ${{ matrix.node-version }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Setup Zimic
        id: zimic-setup
        uses: ./.github/actions/zimic-setup
        with:
          node-version: ${{ env.NODE_VERSION }}
          turbo-token: ${{ env.TURBO_TOKEN }}
          turbo-team: ${{ env.TURBO_TEAM }}
          install: ${{ env.INSTALL_OPTIONS }} !@zimic/release
          build: ${{ env.BUILD_OPTIONS }} !@zimic/release
          build-node-env: ${{ env.IS_PULL_REQUEST_TO_MAIN == 'false' && 'development' || 'production' }}
          install-playwright-browsers: true

      - name: Run tests
        run: |
          pnpm turbo \
            test:turbo \
            --continue \
            --concurrency 100% \
            ${{ steps.zimic-setup.outputs.install-filters }} \
            --filter !@zimic/release

  ci-typescript:
    name: CI TypeScript
    runs-on: ubuntu-latest
    timeout-minutes: 10

    strategy:
      fail-fast: false
      matrix:
        typescript-version:
          - 4.7
          - 4.8
          - 4.9
          - 5.0
          - 5.1
          - 5.2
          - 5.3
          - 5.4

    env:
      NODE_VERSION: 20
      TYPESCRIPT_VERSION: ${{ matrix.typescript-version }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Setup Zimic
        id: zimic-setup
        uses: ./.github/actions/zimic-setup
        with:
          node-version: ${{ env.NODE_VERSION }}
          turbo-token: ${{ env.TURBO_TOKEN }}
          turbo-team: ${{ env.TURBO_TEAM }}
          install: ${{ env.INSTALL_OPTIONS }} !packages/*
          build: ${{ env.BUILD_OPTIONS }} !packages/*
          build-node-env: ${{ env.IS_PULL_REQUEST_TO_MAIN == 'false' && 'development' || 'production' }}
          install-playwright-browsers: false

      - name: Set TypeScript version
        run: |
          pnpm update \
            typescript@${{ matrix.typescript-version }} \
            --recursive \
            --filter zimic-test-client \
            --filter zimic-example-*

      - name: Check types
        run: |
          pnpm turbo \
            types:check \
            --continue \
            --concurrency 100% \
            ${{ steps.zimic-setup.outputs.install-filters }} \
            --filter '!packages/*'
